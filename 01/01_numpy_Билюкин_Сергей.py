## вывести первые 5 строчек
import numpy as np

print(14*"-", "Задание 1 ", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=np.int32, skiprows=1, max_rows=5)
print("Первые 5 строк \n", data)

## 2 среднее, минимум, максимум, медиану по 2 и 3 столбцам

print("\n", 14*"-", "Задание 2", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1, usecols=(1, 2))
mid_val = np.mean(data, axis=0)
min_val = np.min(data, axis=0)
max_val = np.max(data, axis=0)
mediana = np.median(data, axis=0)
print("Среднее значение", mid_val, "\n Минимальное значение", min_val, "\n Максимальное значение", max_val,
      "\n Медиана", mediana)

## 3 ограничить сверху значения продолжительности выполнения рецепта значением квантиля 0,75

print("\n", 14*"-", "Задание 3", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1)
q = 0.75
print("Значение квантиля 0,75 - \n", data[np.where(data[:, 1] <= np.quantile(data[:, 1], q))])

## 4 для скольких рецептов продолжительность равна 0, заменить на 1

print("\n", 14*"-", "Задание 4", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1, usecols=1)
zeros = np.sum(data == 0)
print("Рецепты, время приготовления которых равно 0 минут - ", zeros)
data[data == 0] = 1

## 5 сколько уникальных рецептов

print("\n", 14*"-", "Задание 5", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1, usecols=0)
print("Количесвто уникальных рецептов - ", len(np.unique(data)))

## 6 сколько и каких ралзичлных количесвт ингридиентов

print("\n", 14*"-", "Задание 6", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1, usecols=2)
print("Количество различных количесвт ингридиентов", np.unique(data).size,
      "\n И какие", np.unique(data))

## 7 версия массива содержащий инормацию только о рецептах, где ингридентов <= 5

print("\n", 14*"-", "Задание 7", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1)
data1 = data[np.where(data[:, 2] <= 5)]
print("Измененный массив -  \n ", data1)
print("Проверка, что значений > 5 нет --------", np.where(data1[:, 2] > 5))


## 8 Для каждого рецепта посчитайте, сколько в среднем ингредиентов
# приходится на одну минуту рецепта. Найдите максимальное значение этой величины для всего датасета

print("\n", 14*"-", "Задание 8", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1)
##фильтрую где время приготов = 0, получается [true, true, false и тд]
data1 = data[data[:, 1] != 0]
print("Среднее количество иингридиентов на минуту притоволения по каждому рецепту - \n", data1[:, 2] / data1[:, 1]) ## можно сделать mean
print("Максимальная величина - ", (data1[:, 2] / data1[:, 1]).max())



# # 9 вычислите среднее количество ингредиентов для топ-100 рецептов с наибольшей продолжительностью \

print("\n", 14*"-", "Задание 9", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1)
print("Среднее количество ингридентов - ", data[np.isin(data[:, 1], np.sort(data[:, 1])[-100:])][-100:, 2].mean())




# 10 Выберите случайным образом и выведите информацию о 10 различных рецептах

print("\n", 14*"-", "Задание 10", 14*"-")
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', dtype=int, skiprows=1)
print("Случайные 10 рецептов \n", data[np.random.randint(0, len(data), 10)])

## 11. Выведите процент рецептов, кол-во ингредиентов в которых меньше среднего.

print("\n", 14*"-", "Задание 11", 14*"-")
data1 = 100/len(data) * (len(data[data[:, 2] < data[:, 2].mean()]))
print(f'Процент рецептов, в которых количество ингридиентов меньше среднего -  {round(data1, 1)}%')

##  12 Назовем "простым" такой рецепт, длительность выполнения которого не больше 20 минут и кол-во ингредиентов в котором не больше 5.
# Создайте версию датасета с дополнительным столбцом, значениями которого являются 1, если рецепт простой,
# и 0 в противном случае.

print("\n", 14*"-", "Задание 12", 14*"-")
data1 = np.column_stack((data, (data[:, 1] <= 20) & (data[:, 2] <= 5).astype(np.int8)))
print(data1)

## 13. Выведите процент "простых" рецептов в датасете

print("\n", 14*"-", "Задание 13", 14*"-")
print(f'Процент простых рецептов -  {round((100/len(data1) * len(data1[data1[:, 3] == 1])), 1)}%')


# 14. Разделим рецепты на группы по следующему правилу.
# Назовем рецепты короткими, если их продолжительность составляет менее 10 минут s;
# стандартными, если их продолжительность составляет более 10, но менее 20 минут m;
# и длинными, если их продолжительность составляет не менее 20 минут l.
# Создайте трехмерный массив, где нулевая ось отвечает за номер группы (короткий, стандартный или длинный рецепт),
# первая ось - за сам рецепт и вторая ось - за характеристики рецепта.
# Выберите максимальное количество рецептов из каждой группы таким образом,
# чтобы было возможно сформировать трехмерный массив. Выведите форму полученного массива.

print("\n", 14*"-", "Задание 14", 14*"-")
s = data[data[:, 1] < 10]
m = data[(data[:, 1] >= 10) & (data[:, 1] < 20)]
l = data[data[:, 1] >= 20]
maxx = min((len(s), len(m), len(l)))
final_arr = np.array([s[:maxx], m[:maxx], l[:maxx]])